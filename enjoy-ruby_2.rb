# 2.1 配列(Array)
=begin
　配列はいくつかのオブジェクトを順序付きで格納したオブジェクトとして
　最も使われるコンテナ
=end

# 2.1.1 配列を作る
names = ["nosuke", "nabe", "tabe"]

puts names

# 2.1.2 配列オブジェクト

# 2.1.3　配列からオブジェクトを取り出す
=begin
 配列に格納されたオブジェクトには位置を表す番号であるインデックスがつく
 配列の要素をを取り出すには
 配列名[インデックス]
 といった構文を使う

 配列のインデックスは1からではなく0から始まる
 上のnamesの場合
 print names[1]と書くとnabeが返ってくる
 0=nosuke 1=nabe 2=tabe
 ということ

=end

names = ["nosuke", "nabe", "tabe"]

puts names[0] #=> nosuke 

print "彼の渾名は", names[0], "です。\n"

# 2.1.4　配列にオブジェクトを格納する
=begin
 既にある配列に新しいオブジェクトを格納することもできる
 配列の要素の一つを別のオブジェクトと置き換えるには
 配列名[インデックス]　= 格納したいオブジェクト
 という構文を使う

=end

names[0] = "佐藤"

puts names[0] #=> 内田

names[3] = "健太"

print "彼の名前は", names[0], names[3], "です。\n"

# 2.1.5 配列の中身
=begin
 配列の中にはどんなオブジェクトも要素として格納できます。
 例えば、文字列ではなく数値での配列も可能です。
 また、一つの配列の中に複数種類のオブジェクトを格納することもできる
 時刻やファイルといったオブジェクトも配列の要素にすることができる。
=end

num = [1, 2, 3, 4, 5,6, 7, 8, 9, 0]
puts num[0]

mixed = [1, "花", 2, "風" ,3]
print mixed[1], mixed[3], "\n"
print mixed, "\n"

# 2.1.6 配列と大きさ
=begin
 配列の大きさを得るにはsizeメソッドを使う
 mixedを使用して確認すると 5　が出力される
 この様に配列の大きさが数値として返ってくる。
=end

puts mixed.size　#=> 5

# 2.1.7 配列と繰り返し
=begin
 配列の要素を全て表示したい、配列の要素のうち、ある条件に当てはまる
 要素についてはxxメソッド、当てはまらない要素にはyyメソッドを適用したい
 といったときには配列の要素全てにアクセスする方法が必要です。
 Rubyにはこのためのメソッドとして、.eachメソッドを用意されています。
=end