4.1　オブジェクト
 rubyではデータを表現する基本的な単位をオブジェクトという
 ・数値オブジェクト
 ・文字列オブジェクト
 ・配列オブジェクト
 ・ハッシュオブジェクト
 ・正規表現オブジェクト
 ・時刻オブジェクト
 ・ファイルオブジェクト
 ・シンボルオブジェクト

4.2　クラス
 クラスとは、オブジェクトの種類を表す物
 オブジェクトの性質は属するクラスによって決められる
 
 ※xxクラスのオブジェクトのことをxxクラスのインスタンスということがある
  Rubyでは全てのオブジェクトは何らかのクラスのインスタンス
  インスタンス＝オブジェクト
  自分で新しいクラスを定意義することもできる

4.3 変数
 オブジェクトのつける名札のようなも
 Rubyには４つの変数ち疑似変数がある
 ローカル変数
  先頭が小文字または_で始まる
 グローバル変数
  先頭が$で始まる
 インスタンス変数
  先頭が＠で始まる
 クラス変数
  先頭が@@で始まる
 疑似変数
  nil,true.false,selfなどの特定の値を指し示すために予約された名前
  代入することで値を変更することができない
  見た目は変数人ているが、挙動が変数とは違うので疑似変数
4.3.1 ローカル変数とグローバル変数
 ローカル変数
  変数の有効範囲(変数のスコープ)が局所的
  同じ変数名でも使われている場所が無関係な場所であれば違う変数として扱われる
 グローバル変数
  プログラム中のどこで使われても同じ名前であれば同じ変数として扱われる。
 scopetest.rb参照

 グローバル変数は一般的に好まれない
 ローカル変数は最初に代入された時に初期化される
 初期化されていないローカル変数を参照しようとするとエラーになる

4.4 定数
 定数は変数と同様にあるオブジェクトにつける名札の動きをする
 変数とは違い、一度代入した後でもう一度同じ定数に代入すると警告される
 プログラム上で何度でも参照される値を変更しない値に名前をつけるときにつかう

 先頭がアルファベットの大文字で始まるものが定数となる

4.5 予約語
 使用が制限されている名前を予約後という
 endやnextといった変数を作ると構文エラーになる

  irb(main):001:0> end = 1
  Traceback (most recent call last):
         3: from /usr/bin/irb:23:in `<main>'
         2: from /usr/bin/irb:23:in `load'
         1: from /Library/Ruby/Gems/2.6.0/gems/irb-1.0.0/exe/irb:11:in `<top (required)>'
  SyntaxError ((irb):1: syntax error, unexpected end)
  end = 1
  ^~~

4.6 多重代入
 変数 = 値　の形ではなく、複数の変数への代入を1行で行う
 この機能を多重代入という

4.6.1  いくつかの代入をまとめて行う
 組みになっている変数をまとめて代入する
 first = 1
 seconde = 2
 third = 3
 first,seconde,third = 1, 2, 3
 