3.1 コマンドラインからのデータ入出力

 ARGV　コマンドラインからスクリプトの引数として与えられた文字列を要素として持つ。
 puts_argv.rb　参照
 出力結果
  $ ruby puts_argv.rb 1st 2nd 3rd 4th n
  最初の引数: 1st
  2番目の引数: 2nd
  3番目の引数: 3rd
  4番目の引数: 4th
  5番目の引数: n

 配列ARGVを使えば、データをプログラムの中に全て書く必要がなくなる。
 要素を取り出して変数に代入することも可能
 happy_birth.rb　参照
 出力結果
   $ ruby happy_birth.rb nosuke
   happy birthday, nosuke

 引数から取得したデータは文字列
 計算に使う場合は整数に変換(to_iメソッド)

 arg_arith.rb参照
 出力結果
  $ ruby arg_arith.rb 5 3
  5 + 3 = 8
  5 - 3 = 2
  5 * 3 = 15
  5 / 3 = 1

3.2 ファイルからの読み込み
 Ruby のスクリプトファイルが入力として受け取れるデータはコマンドライン引数だけではなく、ファイルも受け取れる。
 以下各作業ファイルに記述

3.3　メソッドの作成
 メソッドは自分でも作成することができる
 メソッドを作成する構文は
  def メソッド名
    実行したい処理
  end
 といった形

3.4　別のファイルを取り込む
 あるプログラムの中で別のプログラムを利用したい場合(例　例あるプログラムで使ったメソッドを別のプログラムで使いたい場合)
 たいていのプログラミング言語は別々に分割されたプログラム組み合わせて利用する機能を持つ
 他のプログラムから読み込んで利用するためのプログラムをライブラリという
 ライブラリの使用方法はrequireメソッド、またはrequire_relativeメソッドを使う
 require 使いたいライブラリのファイル名
 require_relative 使いたいファイル名
 ライブラリとして使用するファイル名の拡張子(.rb)は省略可能
 

